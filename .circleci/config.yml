version: 2.1

executors:
  dotnet-core-sdk:
    docker:
    - image: mcr.microsoft.com/dotnet/core/sdk:3.1
  docker-publisher:
    environment:
      IMAGE_NAME: openftth/gdb-integrator
    docker:
      - image: circleci/buildpack-deps:stretch
  alpine-git:
    environment:
      IMAGE_NAME: openftth/gdb-integrator
    docker:
    - image: alpine/git

jobs:
  build-app:
    executor: dotnet-core-sdk
    steps:
      - checkout
      - run:
          name: Apt update
          command: apt-get update;
      - run:
          name: Install taskfile
          command: curl -sL https://taskfile.dev/install.sh | sh
      - run:
          name: Restore
          command: ./bin/task restore
      - run:
          name: Build
          command: ./bin/task build-release

  test-app:
    executor: dotnet-core-sdk
    steps:
      - checkout
      - run:
          name: Apt update
          command: apt-get update;
      - run:
          name: Install taskrunner
          command: curl -sL https://taskfile.dev/install.sh | sh
      - run:
          name: Test
          command: ./bin/task test-verbose

  build-docker-image:
    executor: docker-publisher
    steps:
     - checkout
     - setup_remote_docker
     - run:
         name: Build Docker image
         command: |
            docker build -t $IMAGE_NAME:latest .
     - run:
         name: Archive Docker image
         command: docker save -o image.tar $IMAGE_NAME
     - persist_to_workspace:
         root: .
         paths:
          - ./image.tar

  docker-publish-image:
    executor: docker-publisher
    steps:
     - attach_workspace:
         at: /tmp/workspace
     - setup_remote_docker
     - run:
         name: Load archived Docker image
         command: docker load -i /tmp/workspace/image.tar
     - run:
         name: Publish Docker Image to Docker Hub
         command: |
           echo "$DOCKER_ACCESSTOKEN" | docker login -u $DOCKER_LOGIN --password-stdin
           IMAGE_TAG=${CIRCLE_TAG}
           docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
           docker push $IMAGE_NAME:latest
           docker push $IMAGE_NAME:$IMAGE_TAG

  update-helm-chart:
    executor: alpine-git
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b1:09:e2:11:d9:8e:a9:2e:1e:69:ff:76:db:32:7f:44"
      - run:
          name: key-scan
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: git clone open-ftth-chart
          command: git clone git@github.com:DAXGRID/open-ftth-chart.git
      - run:
          name: package and push
          command: |
             IMAGE_TAG_NO_V=${CIRCLE_TAG:1}
             cd ./open-ftth-chart
             git config user.email "runeanielsen@live.dk"
             git config user.name "runeanielsen"
             sed -i "/appVersion:.*/c\appVersion: \"$IMAGE_TAG_NO_V\"" ./openftth/charts/gdb-integrator/Chart.yaml
             sed -i "/  tag:.*/c\  tag: v$IMAGE_TAG_NO_V" ./openftth/charts/gdb-integrator/values.yaml
             CHART_VERSION=echo 'export CHART_VERSION=$(grep -w '^version:' ./openftth/Chart.yaml | echo $(grep -o 'version: [0-9]\.[0-9].')$(grep -w '^version:' ./openftth/Chart.yaml | awk '{print substr($0,length,1)}' | (read number; echo $((number + 1)))))' >> $BASH_ENV
             sed -i "/^version:.*/c$CHART_VERSION" ./openftth/Chart.yaml
             git add .
             git commit -m "upgrades $IMAGE_NAME to version $IMAGE_TAG"
             git push

workflows:
  build-test-upload_image:
    jobs:
      - build-app:
          filters:
            tags:
              only: /.*/
      - test-app:
          filters:
            tags:
              only: /.*/
      - build-docker-image:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - docker-publish-image:
          context: docker
          requires:
           - build-app
           - test-app
           - build-docker-image
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - update-helm-chart:
          requires:
           - docker-publish-image
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
